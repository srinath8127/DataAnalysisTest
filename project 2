---i had worked as a SQL developer and data analyst for a online products retail company.
---i used to help sales and marketing team to analyise the sale and inventory
---As e-commerce experiences remarkable growth around the world,
---the application allows the customer to register and buy an item using the internet.
---The registration process typically involves the generation of a unique customer ID and password and in many cases,
---consolidates information like Name, Address, Contact Information etc.

---Once a user purchases a product, a bill is generated based on the price, and discount, if any.
---The customer has to choose a payment method to settle the transaction before it is delivered to the selected location.

### Agenda of the project
---This projectâ€™s Agenda involves Analyzing the data using SQL on the postgreSQL.
---Understanding different types of Joins(Inner join, Left outer join,
---Right outer join, Full outer join, Self join), different types of Operators(Minus, Union, Union all, Intersect).

### inner join
---The INNER JOIN keyword selects records that have matching values in both tables.

SELECT Orders.OrderID, Customers.CustomerName
FROM Orders
INNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID;


## Left outer join
---The LEFT JOIN keyword returns all records from the left table (table1),
---and the matching records from the right table (table2).
---The result is 0 records from the right side, if there is no match.

SELECT c.contactname, o.orderid
FROM customers c
LEFT JOIN orders o ON c.customerid = o.customerid
ORDER BY c.contactname

### Right outer join,
---The RIGHT JOIN keyword returns all records from the right table (table2),
---and the matching records from the left table (table1).
---The result is 0 records from the left side, if there is no match.

SELECT o.orderid, e.lastname, e.firstname
FROM orders o
RIGHT JOIN employees e ON o.employeeid = e.employeeid
ORDER BY o.orderid;

##Full outer join
--The FULL OUTER JOIN keyword returns all records
--when there is a match in left (table1) or right (table2) table records.

SELECT c.contactname, o.orderid
FROM customers c
full outer join orders o ON c.customerid = o.customerid
ORDER BY c.contactname

###Self join
---A self join is a regular join, but the table is joined with itself.

SELECT a.contactname AS CustomerName1, b.contactname AS CustomerName2, a.city
FROM customers a, customers b
WHERE a.customerid <> B.customerid
AND a.city = b.city
ORDER BY a.city;

##union
---The UNION operator is used to combine the result-set of two or more
SELECT city, country FROM customers
WHERE country='Germany'
UNION
SELECT city, country FROM suppliers
WHERE country='Germany'
ORDER BY city;

##Union all
SELECT  contactname, city, country
FROM customers
UNION all
SELECT contactname, city, country
FROM suppliers;




